// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SAE_S4_MILIBOO.Models.EntityFramework;

#nullable disable

namespace SAE_S4_MILIBOO.Migrations
{
    [DbContext(typeof(MilibooDBContext))]
    [Migration("20230406074441_CreationDBMiliboo")]
    partial class CreationDBMiliboo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdresseId"));

                    b.Property<string>("Cp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("adr_cp");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("adr_numero");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("adr_pays");

                    b.Property<string>("Remarque")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("adr_remarque");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("adr_rue");

                    b.Property<string>("TelFixe")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("adr_tel_fixe");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("adr_ville");

                    b.HasKey("AdresseId");

                    b.ToTable("t_e_adresse_adr");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.AdresseLivraison", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.HasKey("ClientId", "AdresseId");

                    b.HasIndex("AdresseId");

                    b.ToTable("t_j_adresse_livraison_adl");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Avis", b =>
                {
                    b.Property<int>("AvisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("avi_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AvisId"));

                    b.Property<DateTime>("AvisDate")
                        .HasColumnType("date")
                        .HasColumnName("avi_date");

                    b.Property<int>("AvisNote")
                        .HasColumnType("integer")
                        .HasColumnName("avi_note");

                    b.Property<string>("AvisTexte")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("avi_texte");

                    b.Property<string>("AvisTitre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("avi_titre");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<int>("VarianteId")
                        .HasColumnType("integer")
                        .HasColumnName("vrt_id");

                    b.HasKey("AvisId");

                    b.HasIndex("ClientId");

                    b.HasIndex("VarianteId");

                    b.ToTable("t_e_avis_avi");

                    b.HasCheckConstraint("CK_avi_note", "avi_note between 1 and 5");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.Property<int>("CarteBancaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cbr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarteBancaireId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<string>("CryptoCarte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cbr_cryptogramme");

                    b.Property<string>("DateExpiration")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cbr_date_expiration");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cbr_nom");

                    b.Property<string>("NumeroCarte")
                        .IsRequired()
                        .HasColumnType("Text")
                        .HasColumnName("cbr_numero");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cbr_prenom");

                    b.HasKey("CarteBancaireId");

                    b.HasIndex("ClientId");

                    b.ToTable("t_e_cartebancaire_cbr");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Categorie", b =>
                {
                    b.Property<int>("Categorieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ctg_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Categorieid"));

                    b.Property<int?>("CategorieParentid")
                        .HasColumnType("integer")
                        .HasColumnName("ctg_parent_id");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("ctg_description");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ctg_libelle");

                    b.HasKey("Categorieid");

                    b.HasIndex("CategorieParentid");

                    b.ToTable("t_e_categorie_ctg");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("clt_civilite");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("date")
                        .HasColumnName("clt_date_creation");

                    b.Property<DateTime?>("DerniereConnexion")
                        .HasColumnType("date")
                        .HasColumnName("clt_derniere_connexion");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("clt_email");

                    b.Property<bool>("NewsMiliboo")
                        .HasColumnType("boolean")
                        .HasColumnName("clt_newsletter_miliboo");

                    b.Property<bool>("NewsPartenaire")
                        .HasColumnType("boolean")
                        .HasColumnName("clt_newsletter_partenaire");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("clt_nom");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("clt_password");

                    b.Property<string>("Portable")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("clt_portable");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("clt_prenom");

                    b.Property<int>("SoldeFidelite")
                        .HasColumnType("integer")
                        .HasColumnName("clt_solde_fidelite");

                    b.HasKey("ClientId");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.ToTable("t_e_client_clt");

                    b.HasCheckConstraint("CK_clt_solde_fidelite", "clt_solde_fidelite >= 0");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Collection", b =>
                {
                    b.Property<int>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cln_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CollectionId"));

                    b.Property<string>("CollectionLibelle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("cln_libelle");

                    b.Property<decimal>("CollectionPrix")
                        .HasColumnType("numeric(38,17)")
                        .HasColumnName("cln_prix");

                    b.Property<decimal>("CollectionPromo")
                        .HasColumnType("numeric(38,17)")
                        .HasColumnName("cln_promo");

                    b.HasKey("CollectionId");

                    b.ToTable("t_e_collection_cln");

                    b.HasCheckConstraint("CK_cln_prix", "cln_prix >= 0");

                    b.HasCheckConstraint("CK_cln_promo", "cln_promo between 0.01 and 1");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Commande", b =>
                {
                    b.Property<int>("CommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommandeId"));

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<bool>("Collecte")
                        .HasColumnType("boolean")
                        .HasColumnName("cmd_collect");

                    b.Property<int>("EtatId")
                        .HasColumnType("integer")
                        .HasColumnName("eta_id");

                    b.Property<bool>("Express")
                        .HasColumnType("boolean")
                        .HasColumnName("cmd_express");

                    b.Property<string>("Instructions")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("cmd_instructions");

                    b.Property<int>("PointsFideliteUtilises")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_points_fidelite_utilises");

                    b.HasKey("CommandeId");

                    b.HasIndex("AdresseId");

                    b.HasIndex("ClientId");

                    b.HasIndex("EtatId");

                    b.ToTable("t_e_commande_cmd");

                    b.HasCheckConstraint("CK_cmd_point_fidelite_utilises", "cmd_points_fidelite_utilises >= 0");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Couleur", b =>
                {
                    b.Property<int>("IdCouleur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCouleur"));

                    b.Property<string>("CodeHexa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("char(7)")
                        .HasColumnName("clr_code");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("clr_libelle");

                    b.HasKey("IdCouleur");

                    b.HasIndex("Libelle")
                        .IsUnique();

                    b.ToTable("t_e_couleur_clr");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Etat", b =>
                {
                    b.Property<int>("EtatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("eta_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EtatId"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("eta_libelle");

                    b.HasKey("EtatId");

                    b.ToTable("t_e_etat_eta");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.LigneCommande", b =>
                {
                    b.Property<int>("LigneCommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lcm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LigneCommandeId"));

                    b.Property<int>("CommandeId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    b.Property<int>("Quantite")
                        .HasColumnType("integer")
                        .HasColumnName("lcm_quantite");

                    b.Property<int>("VarianteId")
                        .HasColumnType("integer")
                        .HasColumnName("vrt_id");

                    b.HasKey("LigneCommandeId");

                    b.HasIndex("CommandeId");

                    b.HasIndex("VarianteId");

                    b.ToTable("t_e_ligne_commande_lcm");

                    b.HasCheckConstraint("CK_lcm_quantite", "lcm_quantite >= 1");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.LignePanier", b =>
                {
                    b.Property<int>("LigneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lpn_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LigneId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<int>("Quantite")
                        .HasColumnType("integer")
                        .HasColumnName("lpn_quantite");

                    b.Property<int>("VarianteId")
                        .HasColumnType("integer")
                        .HasColumnName("vrt_id");

                    b.HasKey("LigneId");

                    b.HasIndex("ClientId");

                    b.HasIndex("VarianteId");

                    b.ToTable("t_e_ligne_panier_lpn");

                    b.HasCheckConstraint("CK_lpn_quantite", "lpn_quantite >= 1");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Liste", b =>
                {
                    b.Property<int>("ListeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lst_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ListeId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("date")
                        .HasColumnName("lst_date_creation");

                    b.Property<DateTime>("DerniereModif")
                        .HasColumnType("date")
                        .HasColumnName("lst_date_derniere_modif");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("lst_libelle");

                    b.HasKey("ListeId");

                    b.HasIndex("ClientId");

                    b.ToTable("t_e_liste_lst");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pht_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PhotoId"));

                    b.Property<int?>("AviId")
                        .HasColumnType("integer")
                        .HasColumnName("avi_id");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("ctg_id");

                    b.Property<string>("Chemin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("pht_chemin");

                    b.Property<int?>("VarianteId")
                        .HasColumnType("integer")
                        .HasColumnName("vrt_id");

                    b.HasKey("PhotoId");

                    b.HasIndex("AviId");

                    b.HasIndex("CategorieId");

                    b.HasIndex("VarianteId");

                    b.ToTable("t_e_photo_pht");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Produit", b =>
                {
                    b.Property<int>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduit"));

                    b.Property<int>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("ctg_id");

                    b.Property<int?>("CollectionId")
                        .HasColumnType("integer")
                        .HasColumnName("cln_id");

                    b.Property<decimal?>("DensiteAssise")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("prd_densite_assise");

                    b.Property<decimal?>("DensiteDossier")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("prd_densite_dossier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("prd_description");

                    b.Property<decimal?>("HauteurPieds")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("prd_hauteur_pieds");

                    b.Property<string>("InscructionsEntretien")
                        .HasColumnType("text")
                        .HasColumnName("prd_instructions_entretien");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prd_lib");

                    b.Property<bool>("MadeInFrance")
                        .HasColumnType("boolean")
                        .HasColumnName("prd_made_in_france");

                    b.Property<string>("Matiere")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("prd_matiere");

                    b.Property<string>("MatierePieds")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("prd_matiere_pieds");

                    b.Property<decimal?>("PoidsColis")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("prd_poids_colis");

                    b.Property<string>("Revetement")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("prd_revetement");

                    b.Property<string>("TypeMousseAssise")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("prd_type_mousse_assise");

                    b.Property<string>("TypeMousseDossier")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("prd_type_mousse_dossier");

                    b.HasKey("IdProduit");

                    b.HasIndex("CategorieId");

                    b.HasIndex("CollectionId");

                    b.ToTable("t_e_produit_prd");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.ProduitListe", b =>
                {
                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("prd_id");

                    b.Property<int>("ListeId")
                        .HasColumnType("integer")
                        .HasColumnName("lst_id");

                    b.HasKey("ProduitId", "ListeId");

                    b.HasIndex("ListeId");

                    b.ToTable("t_j_prd_lst");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Variante", b =>
                {
                    b.Property<int>("IdVariante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vrt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVariante"));

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("date")
                        .HasColumnName("vrt_date_creation");

                    b.Property<int>("IdCouleur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clr_id");

                    b.Property<int>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prd_id");

                    b.Property<decimal>("Prix")
                        .HasColumnType("numeric(38,17)")
                        .HasColumnName("vrt_prix");

                    b.Property<decimal>("Promo")
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("vrt_promo");

                    b.Property<int>("Stock")
                        .HasColumnType("integer")
                        .HasColumnName("vrt_stock");

                    b.HasKey("IdVariante");

                    b.HasIndex("IdCouleur");

                    b.HasIndex("IdProduit");

                    b.ToTable("t_e_variante_vrt");

                    b.HasCheckConstraint("CK_prd_stock", "vrt_stock >= 0");

                    b.HasCheckConstraint("CK_vrt_prix", "vrt_prix >= 0");

                    b.HasCheckConstraint("CK_vrt_promo", "vrt_promo between 0.01 and 1");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.AdresseLivraison", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Adresse", "AdresseALivreNavigation")
                        .WithMany("AdressesClientsNavigation")
                        .HasForeignKey("AdresseId")
                        .IsRequired()
                        .HasConstraintName("fk_adresse_livraison_adresse");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Client", "ClientALivreNavigation")
                        .WithMany("ClientsLivraisonsNavigation")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("fk_adresse_livraison_client");

                    b.Navigation("AdresseALivreNavigation");

                    b.Navigation("ClientALivreNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Avis", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Client", "ClientsAvisNavigation")
                        .WithMany("AvisClientsNavigation")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("fk_avis_client");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Variante", "VarianteAvisNavigation")
                        .WithMany("AvisVarianteNavigation")
                        .HasForeignKey("VarianteId")
                        .IsRequired()
                        .HasConstraintName("fk_avis_variante");

                    b.Navigation("ClientsAvisNavigation");

                    b.Navigation("VarianteAvisNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Client", "ClientCarteBancaireNavigation")
                        .WithMany("CarteBancaireClientNavigation")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("fk_client_panier");

                    b.Navigation("ClientCarteBancaireNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Categorie", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Categorie", "CategorieParentNavigation")
                        .WithMany("SousCategoriesNavigation")
                        .HasForeignKey("CategorieParentid")
                        .HasConstraintName("fk_sous_categorie_parent");

                    b.Navigation("CategorieParentNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Commande", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Adresse", "AdresseCommandeNavigation")
                        .WithMany("CommandeAdresseNavigation")
                        .HasForeignKey("AdresseId")
                        .IsRequired()
                        .HasConstraintName("fk_commande_adresse");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Client", "ClientCommandeNavigation")
                        .WithMany("CommandesClientNavigation")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("fk_commande_client");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Etat", "EtatCommandeNavigation")
                        .WithMany("CommandeEtatNavigation")
                        .HasForeignKey("EtatId")
                        .IsRequired()
                        .HasConstraintName("fk_commande_etat");

                    b.Navigation("AdresseCommandeNavigation");

                    b.Navigation("ClientCommandeNavigation");

                    b.Navigation("EtatCommandeNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.LigneCommande", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Commande", "CommandeLigneCommandeNavigation")
                        .WithMany("LigneCommandeCommandeNavigation")
                        .HasForeignKey("CommandeId")
                        .IsRequired()
                        .HasConstraintName("fk_lignecommande_commande");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Variante", "VarianteLigneCommandeNavigation")
                        .WithMany("LignesCommandeVarianteNavigation")
                        .HasForeignKey("VarianteId")
                        .IsRequired()
                        .HasConstraintName("fk_lignecommande_variante");

                    b.Navigation("CommandeLigneCommandeNavigation");

                    b.Navigation("VarianteLigneCommandeNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.LignePanier", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Client", "ClientLignePanierNavigation")
                        .WithMany("LignesPanierClientNavigation")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("fk_ligne_panier_panier");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Variante", "VariantesLignePanierNavigation")
                        .WithMany("LignePanierVarianteNavigation")
                        .HasForeignKey("VarianteId")
                        .IsRequired()
                        .HasConstraintName("fk_ligne_panier_variante");

                    b.Navigation("ClientLignePanierNavigation");

                    b.Navigation("VariantesLignePanierNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Liste", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Client", "ClientNavigation")
                        .WithMany("ListesNavigation")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("fk_liste_client");

                    b.Navigation("ClientNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Photo", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Avis", "AvisPhotosNavigation")
                        .WithMany("PhotosAvisNavigation")
                        .HasForeignKey("AviId")
                        .HasConstraintName("fk_photo_avis");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Categorie", "CategoriePhotoNavigation")
                        .WithMany("PhotoCategorieNavigation")
                        .HasForeignKey("CategorieId")
                        .HasConstraintName("fk_photo_categorie");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Variante", "VariantePhotoNavigation")
                        .WithMany("PhotosVarianteNavigation")
                        .HasForeignKey("VarianteId")
                        .HasConstraintName("fk_photo_variante");

                    b.Navigation("AvisPhotosNavigation");

                    b.Navigation("CategoriePhotoNavigation");

                    b.Navigation("VariantePhotoNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Produit", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Categorie", "CategorieProduitNavigation")
                        .WithMany("ProduitsCategorieNavigation")
                        .HasForeignKey("CategorieId")
                        .HasConstraintName("fk_produit_categorie");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Collection", "CollectionProduitNavigation")
                        .WithMany("ProduitsCollectionNavigation")
                        .HasForeignKey("CollectionId")
                        .HasConstraintName("fk_produit_collection");

                    b.Navigation("CategorieProduitNavigation");

                    b.Navigation("CollectionProduitNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.ProduitListe", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Liste", "ListeDeProduitNavigation")
                        .WithMany("ProduitListeNavigation")
                        .HasForeignKey("ListeId")
                        .IsRequired()
                        .HasConstraintName("fk_produitliste_liste");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Produit", "ProduitDansListeNavigation")
                        .WithMany("ListeProduitNavigation")
                        .HasForeignKey("ProduitId")
                        .IsRequired()
                        .HasConstraintName("fk_produitliste_produit");

                    b.Navigation("ListeDeProduitNavigation");

                    b.Navigation("ProduitDansListeNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Variante", b =>
                {
                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Couleur", "CouleurVarianteNavigation")
                        .WithMany("VariantesCouleurNavigation")
                        .HasForeignKey("IdCouleur")
                        .IsRequired()
                        .HasConstraintName("fk_variante_couleur");

                    b.HasOne("SAE_S4_MILIBOO.Models.EntityFramework.Produit", "ProduitVarianteNavigation")
                        .WithMany("VariantesProduitNavigation")
                        .HasForeignKey("IdProduit")
                        .IsRequired()
                        .HasConstraintName("fk_variante_produit");

                    b.Navigation("CouleurVarianteNavigation");

                    b.Navigation("ProduitVarianteNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Adresse", b =>
                {
                    b.Navigation("AdressesClientsNavigation");

                    b.Navigation("CommandeAdresseNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Avis", b =>
                {
                    b.Navigation("PhotosAvisNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Categorie", b =>
                {
                    b.Navigation("PhotoCategorieNavigation");

                    b.Navigation("ProduitsCategorieNavigation");

                    b.Navigation("SousCategoriesNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Client", b =>
                {
                    b.Navigation("AvisClientsNavigation");

                    b.Navigation("CarteBancaireClientNavigation");

                    b.Navigation("ClientsLivraisonsNavigation");

                    b.Navigation("CommandesClientNavigation");

                    b.Navigation("LignesPanierClientNavigation");

                    b.Navigation("ListesNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Collection", b =>
                {
                    b.Navigation("ProduitsCollectionNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Commande", b =>
                {
                    b.Navigation("LigneCommandeCommandeNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Couleur", b =>
                {
                    b.Navigation("VariantesCouleurNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Etat", b =>
                {
                    b.Navigation("CommandeEtatNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Liste", b =>
                {
                    b.Navigation("ProduitListeNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Produit", b =>
                {
                    b.Navigation("ListeProduitNavigation");

                    b.Navigation("VariantesProduitNavigation");
                });

            modelBuilder.Entity("SAE_S4_MILIBOO.Models.EntityFramework.Variante", b =>
                {
                    b.Navigation("AvisVarianteNavigation");

                    b.Navigation("LignePanierVarianteNavigation");

                    b.Navigation("LignesCommandeVarianteNavigation");

                    b.Navigation("PhotosVarianteNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
